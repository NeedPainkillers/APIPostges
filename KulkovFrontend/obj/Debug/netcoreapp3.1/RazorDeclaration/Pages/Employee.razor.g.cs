#pragma checksum "C:\Users\a7aro\source\repos\Kulkov\KulkovFrontend\Pages\Employee.razor" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "54fbe8d5db640e339d34dab18324f21fb2bb0ee4"
// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace KulkovFrontend.Pages
{
    #line hidden
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "C:\Users\a7aro\source\repos\Kulkov\KulkovFrontend\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\a7aro\source\repos\Kulkov\KulkovFrontend\_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\a7aro\source\repos\Kulkov\KulkovFrontend\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\a7aro\source\repos\Kulkov\KulkovFrontend\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\a7aro\source\repos\Kulkov\KulkovFrontend\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\a7aro\source\repos\Kulkov\KulkovFrontend\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\a7aro\source\repos\Kulkov\KulkovFrontend\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Users\a7aro\source\repos\Kulkov\KulkovFrontend\_Imports.razor"
using KulkovFrontend;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\Users\a7aro\source\repos\Kulkov\KulkovFrontend\_Imports.razor"
using KulkovFrontend.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\a7aro\source\repos\Kulkov\KulkovFrontend\Pages\Employee.razor"
using Kulkov.Data;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\a7aro\source\repos\Kulkov\KulkovFrontend\Pages\Employee.razor"
using Kulkov.Repository;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\a7aro\source\repos\Kulkov\KulkovFrontend\Pages\Employee.razor"
using System;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\a7aro\source\repos\Kulkov\KulkovFrontend\Pages\Employee.razor"
using System.Linq;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\a7aro\source\repos\Kulkov\KulkovFrontend\Pages\Employee.razor"
using System.Collections.Generic;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/empl")]
    public partial class Employee : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 84 "C:\Users\a7aro\source\repos\Kulkov\KulkovFrontend\Pages\Employee.razor"
       
    public List<Kulkov.Data.Employee> employees;

    public Kulkov.Data.Employee employee = new Kulkov.Data.Employee();

    public bool[] vs;

    protected async Task Add()
    {
        await Service.AddEmployee(employee);
        employee = new Kulkov.Data.Employee();
        await UpdateTable();
    }

    protected async Task Update()
    {
        var response = await Service.GetAllEmployees();
        var updateItems = (from item in employees.AsParallel()
                           join dbemp in response.AsParallel() on item.id_emp equals dbemp.id_emp
                           where !(item.id_post.Equals(dbemp.id_post) && item.last_name.Equals(dbemp.last_name) &&
                           item.first_name.Equals(dbemp.first_name) && item.gender.Equals(dbemp.gender) &&
                           item.patronymic.Equals(dbemp.patronymic) && item.hire_date.Equals(dbemp.hire_date))
                           select item).ToList();
        foreach (var item in updateItems)
        {
            await Service.UpdateEmployee(item.id_emp, item);
        }
        //await UpdateTable();
    }
    protected async Task Update(int row)
    {
        await Service.UpdateEmployee(employees[row].id_emp, employees[row]);
        //await UpdateTable();
    }

    protected async Task Delete()
    {
        for (int i = 0; i < vs.Length; i++)
        {
            if (vs[i])
                await Service.RemoveEmployee(employees[i].id_emp);
        }
        await UpdateTable();
    }

    protected async Task UpdateTable()
    {
        var response = await Service.GetAllEmployees();
        employees = response.ToList();
        vs = null;
        vs = new bool[employees.Count];
        response = null;
    }

    protected async override Task OnInitializedAsync()
    {
        var response = await Service.GetAllEmployees();
        employees = response.ToList();
        vs = new bool[employees.Count];
        response = null;
    }

#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IEmployeeRepository Service { get; set; }
    }
}
#pragma warning restore 1591
