@page "/case"

@using Kulkov.Repository
@using System.Linq
@using System.Collections.Generic
@inject IEmployeeRepository Service

<h1>Case example</h1>


<select class="form-control" @bind="@id" @bind:event="oninput" @onchange="Update">

    <option value="-1">Выберите сотрудника</option>
    @if (employees != null)
    {
        @foreach (var row in employees)
        {
            <option value="@row.id_emp"> @row.last_name</option>
        }
    }
</select>

@if (employee == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Фамилия</th>
                <th>Имя</th>
                <th>Отчество</th>
                <th>Доход в месяц</th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td>@employee.last_name</td>
                <td>@employee.first_name</td>
                <td>@employee.patronymic</td>
                <td>@employee.additionalInfo</td>
            </tr>

        </tbody>
    </table>
}

@code {
    [Parameter]
    public int id { get; set; } = -1;

    private List<Kulkov.Data.Employee> employees;
    private Kulkov.Data.Employee employee;

    protected async Task Update()
    {
        employee = (await Service.GetEmployeeCase(id));
    }

    protected async override Task OnInitializedAsync()
    {
        employees = (await Service.GetAllEmployees()).ToList();
    }
}

